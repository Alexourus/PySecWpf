<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ProButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBlackColor}"/>
        <Setter Property="FontWeight" Value="600"/>
        <Setter Property="Padding" Value="12 6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="CornerRadius" Value="21"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}"
                              Fill="{DynamicResource PrimaryTextColor}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626"/>
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource TertiaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="buttonBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10"
                        Padding="10,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="Icon" 
                              Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                              Height="24" Width="24"
                              Stretch="None" Fill="White"
                              VerticalAlignment="Center" HorizontalAlignment="Left"
                              Margin="0 0 5 0"/>
                            <TextBlock x:Name="buttonText"
                                   Text="{TemplateBinding Content}"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Grid.Column="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="{DynamicResource TertiaryBlueColor}"/>
                            <Setter TargetName="buttonText" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="{DynamicResource TertiaryBlueColor}"/>
                            <Setter TargetName="buttonText" Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DiscordButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}">
        <Setter Property="Background" Value="#7289DA"/>
        <Setter Property="ToolTip" Value="Discord"/>
    </Style>

    <Style x:Key="InstagramButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}">
        <Setter Property="Background" Value="#E1306C"/>
        <Setter Property="ToolTip" Value="Instagram"/>
    </Style>

    <Style x:Key="TwitterButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}">
        <Setter Property="Background" Value="#000"/>
        <Setter Property="ToolTip" Value="X (Twitter)"/>
    </Style>

    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="btnSelected"
                                    Grid.ColumnSpan="2"
                                    CornerRadius="10"
                                    Width="225" HorizontalAlignment="Right">
                            </Border>
                            <Rectangle Name="Indicator"
                                       HorizontalAlignment="Left"
                                       Width="6" Height="25"
                                       VerticalAlignment="Center"
                                       RadiusX="3" RadiusY="3">
                                <Rectangle.BitmapEffect>
                                    <DropShadowBitmapEffect
                                        ShadowDepth="3"
                                        Direction="0"
                                        Color="#5B8DEF"
                                        Softness="0.6"/>
                                </Rectangle.BitmapEffect>
                            </Rectangle>
                            <Path x:Name="Icon" Data="{Binding Tag,
                                  RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Height="24" Width="24"
                                  Stretch="None" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                            <TextBlock x:Name="txtName" HorizontalAlignment="Left"
                                       VerticalAlignment="Center" Margin="12 0 0 0"
                                       Grid.Column="1" Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       FontSize="{TemplateBinding FontSize}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource SecundaryTextColor}"/>
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource TertiaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource TertiaryTextColor}"/>
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource SecundaryBlueColor}"/>
                            <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource TertiaryBackgroundColor}"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource TertiaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecundaryWhiteColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryWhiteColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="7"
                            Height="14"
                            Width="35"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                        </Border>
                        <Ellipse x:Name="Ellipse"
                                 Height="20"
                                 Width="20"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Left"
                                 Fill="{DynamicResource TertiaryWhiteColor}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="3">
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#C2D1FC" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="15 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#CECECE" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="0 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse"
                                Property="Fill"
                                Value="{DynamicResource SecundaryBlueColor}"/>
                            <Setter TargetName="Ellipse"
                               Property="Stroke"
                               Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0,10"/>
        <Setter Property="Background" Value="{DynamicResource CustomColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource CustomTextColor}"/>
        <Setter Property="Height" Value="289.6"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0,10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="8"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecundaryBlueColor}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1976D2"/>
                <Setter Property="BorderBrush" Value="#1976D2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0D47A1"/>
                <Setter Property="BorderBrush" Value="#0D47A1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#B0BEC5"/>
                <Setter Property="BorderBrush" Value="#B0BEC5"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>
    
    